name: "Deploy"

env:
  TRUSTED_PUBLIC_KEYS: hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
  SUBSTITUTERS: https://cache.iog.io

on:
  push:
    branches:
      - main
      
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v21
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          install_url: https://releases.nixos.org/nix/nix-2.10.3/install
          extra_nix_config: |
            trusted-public-keys = ${{ env.TRUSTED_PUBLIC_KEYS }}
            substituters = ${{ env.SUBSTITUTERS }}
            experimental-features = nix-command flakes

      - name: Build images and copy to local Docker registry
        run: |
          nix build .#oci-images.x86_64-linux.all.copyToDockerDaemon
          ./result/bin/copy-to-docker-daemon

      - name: Authenticate with container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Tag and push images
        run: |
          tagAndPush() {
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$2
            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            echo IMAGE_ID=$IMAGE_ID
            docker tag $2:latest $IMAGE_ID:$TAG
            docker push $IMAGE_ID:$TAG
          }
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]
            export TAG=latest
            echo TAG=$TAG
            tagAndPush "marlowe-runner"
          fi

